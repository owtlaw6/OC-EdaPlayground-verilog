// Code your design here
module dff_ar(
input d, clk, rst_b,
output reg q
);
always @ (posedge clk, negedge rst_b) begin
if (!rst_b) q <= 1'b0;
 else q <= d;
end

endmodule


///tb
// Code your testbench here
// or browse Examples

module dff_ar_tb();
	reg clk, rst_b, d;
  	wire q;
  dff_ar dff0( .clk(clk), .rst_b(rst_b), .d(d), .q(q));

always begin
  	#10 clk = ~clk;
end
initial begin
  	$dumpfile("dump.vcd");
	$dumpvars(0);
  	clk = 1'b0;
	rst_b = 1'b1;
  	d = 1'b1;
    #20 d = 1'b0;
  	#20 d = 1'b1;
  	#20 d = 1'b0;
	#290 rst_b = 1'b0;
  	#10 $finish;
end

endmodule
